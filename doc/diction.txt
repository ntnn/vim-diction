*diction.txt*	For Vim Version 7.4 and up	Last change: 2016 Apr 24

			VIM-DICTION DOCUMENTATION by Nelo-T. Wallus

Help on using vim-diction                                             *diction*

    1. Introduction ............................... |diction-intro|
    2. Configuration .............................. |diction-configuration|
    3. Usage ...................................... |diction-usage|
    4. Database Layout ............................ |diction-database|

==============================================================================
 1. INTRODUCTION                                                *diction-intro*

Diction, noun: >
    choice of words especially with regard to correctness, clearness, or effectiveness

    source: Merriam-Webster, 2016
<

vim-diction parses databases determined by |'diction_databases'|, looks
for bad diction and fills the quickfix list with explanations and
suggestions.

==============================================================================
 1. CONFIGURATION                                       *diction-configuration*

Available mappings:

    <Plug>Diction ............................. |:Diction|
    <Plug>LDiction ............................ |:LDiction|

Available options:
    diction_debug ............................. |'diction_debug'|
    diction_formatter ......................... |'diction_formatter'|
    diction_databases ......................... |'diction_databases'|

------------------------------------------------------------------------------
                                                              *'diction_debug'*
Value: numeric ~
Default: unset (0) ~

Print debug messages.

Attention: Verbose and a lot.

------------------------------------------------------------------------------
                                                          *'diction_formatter'*
Value: string ~
Default: unset (`fmt -t` or &formatprg) ~

External program to format long lines into readable output.

If neither 'diction_formatter' nor 'formatprg' are set, fmt from coreutils
is used, if it is available.

Example: >
    let g:diction_formatter = 'fmt t'
<
------------------------------------------------------------------------------
                                                          *'diction_databases'*
Value: list ~
Default: unset (shipped databases) ~

List of databases to parse. vim-diction always parses shipped databases in
alphabetical order first and then user-defined.in the given order.

Example: >
    let g:diction_databases = [
                \ '/usr/share/diction/en',
                \ '~/gitted_conf/diction'
                \ ]
<

==============================================================================
 3. USAGE                                                       *diction-usage*

The following commands are available:

*:Diction*

Run diction on the current file and parse the output, displaying the result in
the |quickfix| list.

*:LDiction*

Like |:Diction|, displaying the result in the |location-list|.

*:DictionLog*

Saves output of |:messages| in 'vim-diction.log'. Intended to be used with
|'diction_debug'|.

==============================================================================
 4. DATABASE LAYOUT                                          *diction-database*

The databases are tsv (tab separated values) files with one or two columns per
line.

Every line in a database has either one or two values or is a comment:
Layout: >
    # comment
    of\scourse	Explain why explicitly instead of implicitly. Also helps to avoid errors.
    simply
<
Comments are ignored by vim-diction. The first value is the diction to match
and the second the explanation and/or suggestion.

A diction should always come with some a suggestion or explanation and
also be accompanied by a commented reference (Hyperlink, book reference,
et cetera) to the source and deeper explanation.

Dictions are pattern-matched enclosed in |\<| and |\>|. To match a diction
with whitespace like above include |\s| in the pattern.
See |pattern-overview| for more information.

/* vim:tw=78:ts=8:ft=help:norl: */
